1. LINQ
2. exception handling
3. serialization
4. object destruction

5. threading

Exception Handling:
Errors: 
	a. compile time errors
	b. logical errors => runtime

multiply(int a, int b){ return (a*b);}

1. Creates an object of a class DivideByZeroException/ IndexOutofRangeException
2. populates the object with lots of information, such as: which method, which line in which file of which program caused the issue
3. It passes the reference of that object to you

				Exception
-----------------------------------------------------------------------------------------
SystemException					ApplicationException
	DivideByZeroException				AgeLessThan18Exception
	NullReferenceException
	.......................

GetAll => NullRef, Format, IO, filenotfound
M2 => EX1, EX2, EX3, ...
M3=> EX1, EX4, NullRef, Format, .....

data acces layer
-------------------------
	N methods 
	3/4 exceptions
	3N,4N,....

Object destruction:
Garbage Collector (part of CLR)

GC.Collect();
Inactive roots

		1mb  3mb 6mb
Generation: 0 => 1 => 2

Mark the objects

GC.Collect();

SBI: Sync Block Index => bit value

.net framework 3.0: (2007)
	WPF (Windows Presentation Foundation), 
	WCF (Windows Communication Foundation), 
	WF (Workflow foundation)

Windows Forms
XP => XPDM [GDI/GDI+ and User32.dll]

Vista => 7.0,......
VDDM => DirectX + user32.dll

DirectX => gaming engine (VC++)
better performance

1360 * 768
1920 * 1080

dots per inch => DPI
540
800 + 280

Adobe Flash
Silverlight => RIA
language: XAML (zammel) => eXtensible Application Markup Language => BAML (Binary)

<Button Text="">
	<Background Brush=""/>
</Button>

WPF:
=> Button button1 = new Button();
   button1.Background = new Brush();

Grid
Canvas
StackPanel
WrapPanel
DockPanel


Window1.xaml		=> Window1.baml (XAML converted to BAML)	[design]	
Window1.xaml.cs		=> Window1.g.cs (remaing code of the partial class file) [code in C#]

app.xaml => 
app.xaml.cs [partial App]  app.g.cs [partial App]

Property System
Event System

1. target: WPF element/control and it's property 
note: target must be a "dependency" property
Dependency Property System

2. source: 
	a. another WPF element which is silbling [use ElementName property of Binding]
	b. another WPF element up in the hierarchy [use RelativeSource property of Binding]
	c. another object (not a WPF element) [use Source property of Binding]

Binding class
	ElementName
	Path
	Mode
	UpdateSourceTrigger
	













	